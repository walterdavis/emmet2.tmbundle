<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -wU

require "open3"

def target_text
  current_line = ENV['TM_CURRENT_LINE']
  target = current_line.split(/\s+/).last
  [current_line, target]
end

# figure out the current language from the TM_SCOPE variable
# take something like the following string and figure out that it's ruby
# "source.ruby attr.os-version.10.8.3 attr.untitled dyn.caret.end.document"
def language
  scope = ENV['TM_SCOPE']
  sources = scope.split(" ").select {|s| s.start_with? "source."}
  source = (sources.kind_of?(Array) &amp;&amp; sources.size &gt;= 1) ? sources[0] : ""
  scope_lang = source.split(".").last
  # convert TM source name
  language_map = {
    :html =&gt; "html",
    :svg  =&gt; "html",
    :xml  =&gt; "html",
    :css  =&gt; "css"
  }
  return "html" if scope_lang.nil?
  key = scope_lang.to_sym
  lang = language_map[key] || scope_lang # language_map.has_key?(key) ? language_map[key] : scope_lang
  "#{lang}"
end

line, target = target_text
exit(0) if target.nil? || target.strip == ""
# script = ENV['TM_BUNDLE_SUPPORT']  "/Users/zdenko/@Code/tmemmet"
res, st = Open3.capture2 "osascript", "#{ENV['TM_BUNDLE_SUPPORT']}/emmet2.scptd", target, language
exit(0) if res.nil? || res.strip == ""
res = res.gsub(/\$\{(\d+)\}/, '$\1').gsub /\s+$/, ""
replacement = line.gsub target, res
printf replacement
</string>
	<key>input</key>
	<string>line</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>^e</string>
	<key>name</key>
	<string>emmet</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>snippet</string>
	<key>outputLocation</key>
	<string>replaceInput</string>
	<key>uuid</key>
	<string>6E884CD8-F1AC-470D-8CC7-43E0D75CDD32</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
